name: Extract authors and Rewrite History

on:
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  extract-authors:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Target Repository
        uses: actions/checkout@v4
        with: 
          repository: Saideep09/branch-protection-rules
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0
          path: target-repo 

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install git-filter-repo
        run: pip install git-filter-repo

      # Print authors BEFORE rewrite
      - name: Print Authors Before Rewrite
        run: |
          echo "Authors Before Rewrite:"
          git -C target-repo log --all --pretty="%an <%ae>" | sort | uniq

      # Generate Author Mapping
      - name: Generate Author Mapping File
        run: |
          cd target-repo
          
          # Create mappings dynamically
          touch mappings.txt
          git log --all --pretty="%an <%ae>" | sort | uniq > authors.txt
          
          while IFS= read -r line; do
            old_email=$(echo "$line" | cut -d' ' -f2 | tr -d '<>')
            new_email="new_${old_email}"
            new_name="New $(echo "$line" | cut -d' ' -f1)"
            echo "$old_email $new_name <$new_email>" >> mappings.txt
          done < authors.txt
          
          # Display mappings
          echo "Author Mappings:"
          cat mappings.txt

      # Rewrite Author Information Using Python Callback
      - name: Rewrite Commit History with Python Script
        run: |
          cd target-repo
          
          # Prepare Python script for git-filter-repo
          cat << EOF > rewrite_authors.py
          import sys
          from git_filter_repo import FilterRepo
          
          # Define author mappings
          author_mappings = {
          EOF
          
                    while IFS= read -r line; do
                      old_email=$(echo "$line" | cut -d' ' -f2 | tr -d '<>')
                      new_email="new_${old_email}"
                      new_name="New $(echo "$line" | cut -d' ' -f1)"
                      echo "    \"$old_email\": (\"$new_email\", \"$new_name\")," >> rewrite_authors.py
                    done < mappings.txt
          
                    cat << EOF >> rewrite_authors.py
          }
          
          def update_author(commit):
              email = commit.author_email.decode("utf-8")
              if email in author_mappings:
                  new_email, new_name = author_mappings[email]
                  commit.author_email = new_email.encode("utf-8")
                  commit.author_name = new_name.encode("utf-8")
          
          FilterRepo().filter_commits(callback=update_author)
          EOF
          
                    # Execute Python script to rewrite history
                    python3 rewrite_authors.py
          
      # Force Push Rewritten History
      - name: Push Rewritten History to Remote
        run: |
          cd target-repo
          git remote add origin https://github.com/Saideep09/branch-protection-rules.git
          git push origin main --force --set-upstream

      # Print authors AFTER rewrite
      - name: Print Authors After Rewrite
        run: |
          echo "Authors After Rewrite:"
          git -C target-repo log --all --pretty="%an <%ae>" | sort | uniq

      # Upload Mappings as Artifact
      - name: Upload Authors Mapping
        uses: actions/upload-artifact@v3
        with:
          name: authors-mapping
          path: target-repo/mappings.txt
