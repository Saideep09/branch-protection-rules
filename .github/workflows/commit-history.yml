name: Extract authors and Rewrite History

on:
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  extract-authors:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Target Repository
        uses: actions/checkout@v4
        with: 
          repository: MGMResorts/mgm-af-migrations-via-actions
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0
          path: target-repo 


      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install git-filter-repo
        run: pip install git-filter-repo

      - name: Print Authors Before Rewrite
        run: |
          echo "Authors Before Rewrite:"
          git -C target-repo log --all --pretty="%an <%ae>" | sort | uniq

      - name: Fetch Unique Authors
        run: |
          # Fetch authors and save to a file inside target-repo
          git -C target-repo log --all --pretty="%an <%ae>" | sort | uniq > target-repo/authors.txt
          
      - name: Process Authors using Python
        run: |
          python3 - <<EOF
          import sys
          # Read authors from the target-repo directory
          with open("target-repo/authors.txt", "r") as f:
              authors_raw = f.read()
          authors = {}
          for line in authors_raw.splitlines():
              if line.strip():
                  name, email = line.rsplit(" <", 1)
                  email = email.rstrip(">")
                  authors[email] = name
          print("Authors Dictionary:", authors)
          EOF


      # Generate Author Mapping File
      - name: Generate Author Mapping
        run: |
          cd target-repo
          
          # Create mappings dynamically
          touch mailmap.txt
          git log --all --pretty="%an <%ae>" | sort | uniq > authors.txt
          
          while IFS= read -r line; do
            old_email=$(echo "$line" | cut -d' ' -f2 | tr -d '<>')
            new_email="new_${old_email}"
            new_name="New $(echo "$line" | cut -d' ' -f1)"
            echo "$old_email $new_name <$new_email>" >> mailmap.txt
          done < authors.txt
          
          # Display mappings
          echo "Mailmap File:"
          cat mailmap.txt

      # Rewrite Commit History Using --mailmap
      - name: Rewrite Commit History
        run: |
          cd target-repo
          
          # Apply author rewrite using --mailmap
          git-filter-repo --mailmap mailmap.txt --force

      # Force Push Rewritten History
      - name: Push Rewritten History to Remote
        run: |
          cd target-repo
          git remote add origin https://github.com/Saideep09/branch-protection-rules.git
          git push origin main --force --set-upstream

      # Print authors AFTER rewrite
      - name: Print Authors After Rewrite
        run: |
          echo "Authors After Rewrite:"
          git -C target-repo log --all --pretty="%an <%ae>" | sort | uniq

      # Upload Mappings as Artifact
      - name: Upload Authors Mapping
        uses: actions/upload-artifact@v3
        with:
          name: authors-mapping
          path: target-repo/mailmap.txt
