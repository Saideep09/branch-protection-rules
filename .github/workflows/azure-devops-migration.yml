name: Azure DevOps Migration Automation

on:
  workflow_dispatch:
    inputs:
      pipeline-id:
        description: "Azure DevOps Pipeline ID to migrate"
        required: true
        type: string

jobs:
  migrate-pipeline:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Install GitHub CLI
    - name: Install GitHub CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y gh

    # Step 3: Install Actions Importer Extension
    - name: Install Actions Importer Extension
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh extension install github/gh-actions-importer

    # Step 4: Update Actions Importer Image
    - name: Update Actions Importer Image
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh actions-importer update

    - name: Validate Azure DevOps PAT
      env:
        AZURE_DEVOPS_TOKEN: ${{ secrets.AZURE_DEVOPS_TOKEN }}
        AZURE_DEVOPS_ORG: ${{ secrets.AZURE_DEVOPS_ORG }}
      run: |
        echo "Validating Azure DevOps PAT..."
        response=$(curl -s -o /dev/null -w "%{http_code}" -u ":${AZURE_DEVOPS_TOKEN}" \
          "https://dev.azure.com/${AZURE_DEVOPS_ORG}/_apis/projects?api-version=7.1-preview.1")
        
        if [[ "$response" -ne 200 ]]; then
          echo "Error: Azure DevOps PAT is invalid or does not have the required permissions. Response code: $response"
          exit 1
        else
          echo "Azure DevOps PAT is valid."
        fi

    # Step 5: Set Up Configuration Manually
    - name: Set Up Configuration Manually
      run: |
        mkdir -p ~/.gh-actions-importer
        echo "azure-devops:" > ~/.gh-actions-importer/config.yml
        echo "  org: ${{ secrets.AZURE_DEVOPS_ORG }}" >> ~/.gh-actions-importer/config.yml
        echo "  token: ${{ secrets.AZURE_DEVOPS_TOKEN }}" >> ~/.gh-actions-importer/config.yml

    # Step 6: Validate Azure DevOps Credentials
    - name: Validate Azure DevOps Credentials
      run: |
        curl -u :${{ secrets.AZURE_DEVOPS_TOKEN }} https://dev.azure.com/${{ secrets.AZURE_DEVOPS_ORG }} | echo "Azure DevOps credentials validated."

    # Step 7: Dry Run Migration
    - name: Dry Run Migration
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        AZURE_DEVOPS_ORG: ${{ secrets.AZURE_DEVOPS_ORG }}
        AZURE_DEVOPS_PROJECT: ${{ secrets.AZURE_DEVOPS_PROJECT }}
        AZURE_DEVOPS_TOKEN: ${{ secrets.AZURE_DEVOPS_TOKEN }}
      run: |
        mkdir -p tmp/dry-run
        gh actions-importer dry-run azure-devops pipeline \
          --pipeline-id "${{ github.event.inputs.pipeline-id }}" \
          --azure-devops-organization "${{ secrets.AZURE_DEVOPS_ORG }}" \
          --azure-devops-project "${{ secrets.AZURE_DEVOPS_PROJECT }}" \
          --azure-devops-access-token "{{ secrets.AZURE_DEVOPS_TOKEN }}" \
          --github-access-token "{{ secrets.PAT_TOKN }"\
          --output-dir tmp/dry-run \
          --no-telemetry  # Disable telemetry to avoid related errors
        cat tmp/dry-run/log/*  # Debugging log

    # Step 8: Audit Pipeline
    - name: Audit Pipeline
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        AZURE_DEVOPS_ORG: ${{ secrets.AZURE_DEVOPS_ORG }}
        AZURE_DEVOPS_PROJECT: ${{ secrets.AZURE_DEVOPS_PROJECT }}
        AZURE_DEVOPS_TOKEN: ${{ secrets.AZURE_DEVOPS_TOKEN }}
      run: |
        mkdir -p tmp/audit
        gh actions-importer audit azure-devops pipeline \
          --pipeline-id ${{ github.event.inputs.pipeline-id }} \
          --azure-devops-organization ${{ secrets.AZURE_DEVOPS_ORG }} \
          --azure-devops-project ${{ secrets.AZURE_DEVOPS_PROJECT }} \
          --output-dir tmp/audit
        cat tmp/audit/log/*  # Debugging log

    # Step 9: Upload Dry Run Results
    - name: Upload Dry Run Results
      uses: actions/upload-artifact@v3
      with:
        name: dry-run-results
        path: tmp/dry-run

    # Step 10: Upload Audit Results
    - name: Upload Audit Results
      uses: actions/upload-artifact@v3
      with:
        name: audit-results
        path: tmp/audit

    # Step 11: Commit and Push Migrated Workflows (if dry run is successful)
    - name: Commit Migrated Workflows
      if: success()  # Only run if the previous steps succeeded
      run: |
        mv tmp/dry-run/.github/workflows/* .github/workflows/
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add .github/workflows/
        git commit -m "Add migrated Azure DevOps pipeline workflows"
        git push origin main
