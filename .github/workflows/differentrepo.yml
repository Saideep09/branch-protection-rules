name: Different repo

on:
  workflow_dispatch:
     inputs:
      pipeline-id:
        description: "Azure DevOps Pipeline ID to migrate"
        required: true
        type: string
permissions:
  contents: write
  actions: write
  pull-requests: write

jobs:
  migrate-pipeline:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    # Step 2: Install GitHub CLI
    - name: Install GitHub CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y gh

    # Step 3: Install Actions Importer Extension
    - name: Install Actions Importer Extension
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh extension install github/gh-actions-importer

    # Step 4: Update Actions Importer Image
    - name: Update Actions Importer Image
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh actions-importer update

    # Step 5: Validate Azure DevOps PAT
    - name: Validate Azure DevOps PAT
      env:
        AZURE_DEVOPS_TOKEN: "${{ secrets.AZURE_DEVOPS_TOKEN }}"
        AZURE_DEVOPS_ORG: "${{ secrets.AZURE_DEVOPS_ORG }}"
      run: |
        echo "Validating Azure DevOps PAT..."
        response=$(curl -s -o /dev/null -w "%{http_code}" -u ":${AZURE_DEVOPS_TOKEN}" \
          "https://dev.azure.com/${AZURE_DEVOPS_ORG}/_apis/projects?api-version=7.1-preview.1")
        
        if [[ "$response" -ne 200 ]]; then
          echo "Error: Azure DevOps PAT is invalid or does not have the required permissions. Response code: $response"
          exit 1
        else
          echo "Azure DevOps PAT is valid."
        fi

    # Step 5: Set Up Configuration Manually
    - name: Set Up Configuration Manually
      run: |
        mkdir -p ~/.gh-actions-importer
        echo "azure-devops:" > ~/.gh-actions-importer/config.yml
        echo "  org: MGMResortsDigitalEngineering" >> ~/.gh-actions-importer/config.yml
        echo "  token: "${{ secrets.AZURE_DEVOPS_TOKEN }}"" >> ~/.gh-actions-importer/config.yml

    # Step 6: Validate Azure DevOps Credentials
    - name: Validate Azure DevOps Credentials
      run: |
        curl -u :${{ secrets.AZURE_DEVOPS_TOKEN }} https://dev.azure.com/${{ env.AZURE_DEVOPS_ORG }} | echo "Azure DevOps credentials validated."

    # Step 7: Dry Run Migration
    - name: Dry Run Migration
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        AZURE_DEVOPS_ORG: "${{ vars.AZURE_DEVOPS_ORG }}"
        AZURE_DEVOPS_PROJECT: "${{ vars.AZURE_DEVOPS_PROJECT }}"
        AZURE_DEVOPS_TOKEN: "${{ secrets.AZURE_DEVOPS_TOKEN }}"
      run: |
        mkdir -p tmp/dry-run
        gh actions-importer dry-run azure-devops pipeline \
        --pipeline-id "${{ github.event.inputs.pipeline-id }}" \
        --azure-devops-organization "${{ env.AZURE_DEVOPS_ORG }}" \
        --azure-devops-project "${{ env.AZURE_DEVOPS_PROJECT }}" \
        --azure-devops-access-token "${{ secrets.AZURE_DEVOPS_TOKEN }}" \
        --github-access-token "${{ secrets.PAT_TOKEN }}" \
        --output-dir tmp/dry-run \
        --no-telemetry  # Disable telemetry to avoid related errors
        cat tmp/dry-run/log/*

    # Step 8: Upload Dry Run Results
    - name: Upload Dry Run Results
      uses: actions/upload-artifact@v3
      with:
        name: dry-run-results
        path: tmp/dry-run

    # Step 9: Debug Dry-Run Output
    - name: Debug Dry-Run Output
      run: |
        echo "Listing files in tmp/dry-run:"
        find tmp/dry-run

    # Step 10: Move Generated Workflows
    - name: Move Generated Workflows
      run: |
        # List the files in the workflows directory
        echo "Listing files in tmp/dry-run/pipelines/Payment_Services/Payment_Diversity_[CNP]/MGMResorts.pd-payments-audit-trail/.github/workflows:"
        ls -l tmp/dry-run/pipelines/Payment_Services/Payment_Diversity_[CNP]/MGMResorts.pd-payments-audit-trail/.github/workflows/
        
        # Move the workflow file explicitly
        if [ -f "tmp/dry-run/pipelines/Payment_Services/Payment_Diversity_[CNP]/MGMResorts.pd-payments-audit-trail/.github/workflows/mgmresorts.pd-payments-audit-trail.yml" ]; then
          mv "tmp/dry-run/pipelines/Payment_Services/Payment_Diversity_[CNP]/MGMResorts.pd-payments-audit-trail/.github/workflows/mgmresorts.pd-payments-audit-trail.yml" .github/workflows/
        else
          echo "No workflow file found, skipping move step."
        fi

    # Step 13: Commit and Push Changes to Different Repo and Branch
        # Step 13: Commit and Push Changes to Different Repo and Branch
    - name: Commit and Push Changes to Different Repo and Branch
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        GIT_TRACE_PACKET: 1
        GIT_TRACE: 1
      run: |
        git init
        
        # Configure Git User
        if git config --get user.email; then
          echo "Git user email already set."
        else
          git config user.email "actions@github.com"
        fi
        if git config --get user.name; then
          echo "Git user name already set."
        else
          git config user.name "GitHub Actions"
        fi

        # Remove existing remote and add the new one
        git remote remove origin || true
        git remote add origin https://github.com/Saideep09/lock-add-in-migration.git

        # Checkout the specified branch
        git checkout -B specified-branch
        
        # Add, Commit, and Optimize Repository
        git add .
        git commit -m "Add migrated Azure DevOps pipeline workflows"
        git gc --aggressive --prune=now
        git repack -a -d --depth=1 --window=1

        # Force Push with Verbose Logging
        git push origin specified-branch --force
